/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package java2024;

import java.awt.event.KeyEvent;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Lim Ee Chian
 */
public final class SaleOrdersListPage extends javax.swing.JFrame {
    private TableRowSorter<DefaultTableModel> originalSorter;
    /**
     * Creates new form SaleOrdersListPage
     */
    public SaleOrdersListPage() {
        initComponents();
        
        // Set up the custom close operation
        setupCloseOperation();
        
        // Set the location of the JFrame form to be centered on the screen
        setLocationRelativeTo(null);
        
        UserUtilityClass.displayUsername(tfUsername);
        // Make the tfUsername field uneditable and not focusable
        tfUsername.setEditable(false);
        tfUsername.setFocusable(false);
        
        load2ndSaleOrdersTableData();
        
        // Initialization code or data loading 
        DefaultTableModel model = (DefaultTableModel) tb2ndSaleOrdersTable.getModel();
        originalSorter = new TableRowSorter<>(model);
        tb2ndSaleOrdersTable.setRowSorter(originalSorter);
    }
    
    // Override the windowClosing event
    private void formWindowClosing(java.awt.event.WindowEvent evt) {
        // Close only this page
        this.dispose();
    }
    // Add this method to set up the custom close operation

    private void setupCloseOperation() {
        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        tfUsername = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        tfSearchAny = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        dcStartPoDate = new com.toedter.calendar.JDateChooser();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        dcEndPoDate = new com.toedter.calendar.JDateChooser();
        jLabel5 = new javax.swing.JLabel();
        btnSearchDateRange = new javax.swing.JButton();
        btnGenerateApprovedReportPage = new javax.swing.JButton();
        btnGenerateWorkDoneReportPage = new javax.swing.JButton();
        btnGenerateClosedReportPage = new javax.swing.JButton();
        btnViewEdit = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tb2ndSaleOrdersTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sale Orders List Page");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(169, 179, 136));

        tfUsername.setBackground(new java.awt.Color(254, 250, 224));

        jLabel1.setFont(new java.awt.Font("Dubai Medium", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Sale Orders List");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(tfUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(458, 458, 458))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tfUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        tfSearchAny.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfSearchAnyKeyTyped(evt);
            }
        });

        btnSearch.setBackground(new java.awt.Color(95, 111, 82));
        btnSearch.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        btnSearch.setForeground(new java.awt.Color(255, 255, 255));
        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        jLabel2.setText("Filter By ");

        jLabel3.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        jLabel3.setText("PO. Date(s)");

        jLabel4.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        jLabel4.setText("Start");

        jLabel5.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        jLabel5.setText("End");

        btnSearchDateRange.setBackground(new java.awt.Color(95, 111, 82));
        btnSearchDateRange.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        btnSearchDateRange.setForeground(new java.awt.Color(255, 255, 255));
        btnSearchDateRange.setText("Search Date Range");
        btnSearchDateRange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchDateRangeActionPerformed(evt);
            }
        });

        btnGenerateApprovedReportPage.setBackground(new java.awt.Color(95, 111, 82));
        btnGenerateApprovedReportPage.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        btnGenerateApprovedReportPage.setForeground(new java.awt.Color(255, 255, 255));
        btnGenerateApprovedReportPage.setText("Generate Approved Report Page");

        btnGenerateWorkDoneReportPage.setBackground(new java.awt.Color(95, 111, 82));
        btnGenerateWorkDoneReportPage.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        btnGenerateWorkDoneReportPage.setForeground(new java.awt.Color(255, 255, 255));
        btnGenerateWorkDoneReportPage.setText("Generate Work Done Report Page");
        btnGenerateWorkDoneReportPage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerateWorkDoneReportPageActionPerformed(evt);
            }
        });

        btnGenerateClosedReportPage.setBackground(new java.awt.Color(95, 111, 82));
        btnGenerateClosedReportPage.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        btnGenerateClosedReportPage.setForeground(new java.awt.Color(255, 255, 255));
        btnGenerateClosedReportPage.setText("Generate Closed Report Page");

        btnViewEdit.setBackground(new java.awt.Color(95, 111, 82));
        btnViewEdit.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        btnViewEdit.setForeground(new java.awt.Color(255, 255, 255));
        btnViewEdit.setText("View | Edit");
        btnViewEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewEditActionPerformed(evt);
            }
        });

        btnRefresh.setBackground(new java.awt.Color(95, 111, 82));
        btnRefresh.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        btnRefresh.setForeground(new java.awt.Color(255, 255, 255));
        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(254, 250, 224));

        tb2ndSaleOrdersTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Sale Order No.", "PO. No.", "PO. Date", "Salesperson ID", "Customer Name", "Phone No.", "Total Amount", "Product Status", "Delivery Status", "Order Status"
            }
        ));
        jScrollPane1.setViewportView(tb2ndSaleOrdersTable);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jScrollPane1)
                .addGap(19, 19, 19))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(26, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(tfSearchAny, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSearch)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(38, 38, 38)
                                .addComponent(dcEndPoDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(dcStartPoDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSearchDateRange)
                        .addGap(222, 222, 222)
                        .addComponent(btnRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(btnGenerateApprovedReportPage)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                        .addComponent(btnGenerateWorkDoneReportPage)
                        .addGap(35, 35, 35)
                        .addComponent(btnGenerateClosedReportPage)
                        .addGap(40, 40, 40)
                        .addComponent(btnViewEdit)
                        .addGap(22, 22, 22))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel2))
                                        .addGap(1, 1, 1)
                                        .addComponent(dcStartPoDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(dcEndPoDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btnSearchDateRange)
                                .addGap(14, 14, 14)))
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnRefresh)
                        .addGap(8, 8, 8))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSearch)
                            .addComponent(tfSearchAny, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGenerateApprovedReportPage)
                    .addComponent(btnGenerateWorkDoneReportPage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnGenerateClosedReportPage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnViewEdit))
                .addGap(18, 18, 18))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // Search button
        
        DefaultTableModel model = (DefaultTableModel) tb2ndSaleOrdersTable.getModel();
        TableRowSorter<DefaultTableModel> searchSorter = new TableRowSorter<>(model);
        tb2ndSaleOrdersTable.setRowSorter(searchSorter);
        searchSorter.setRowFilter(RowFilter.regexFilter(tfSearchAny.getText()));
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // Refresh button
        
        // Reload the original data from the `2ndSaleOrdersTable.txt` file
        load2ndSaleOrdersTableData();
        
        // Clear the search text field
        tfSearchAny.setText("");
        
        // Clear the date chooser
        dcStartPoDate.setDate(null);
        dcEndPoDate.setDate(null);
        
        
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void tfSearchAnyKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfSearchAnyKeyTyped
        // Press enter key to search
        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
            DefaultTableModel model = (DefaultTableModel) tb2ndSaleOrdersTable.getModel();
            TableRowSorter<DefaultTableModel> searchSorter = new TableRowSorter<>(model);
            tb2ndSaleOrdersTable.setRowSorter(searchSorter);
            
            String searchText = tfSearchAny.getText();
            searchSorter.setRowFilter(RowFilter.regexFilter(searchText));
            
        }
    }//GEN-LAST:event_tfSearchAnyKeyTyped

    private void btnSearchDateRangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchDateRangeActionPerformed
        // Search Date Range button - search the range of the PO. Date 
        try {
            // Get the selected PO. Date range from date choosers
            Date poDateStart = dcStartPoDate.getDate();
            Date poDateEnd = dcEndPoDate.getDate();
            
            // Call the filterPurchaseOrderDateRange() function
            filterPurchaseOrderDateRange(poDateStart,poDateEnd);
            
        } catch (ParseException e) {
            System.out.println("ParseException occured during Search PO. Date Range: " + e.getMessage());
        }
    }//GEN-LAST:event_btnSearchDateRangeActionPerformed

    private void btnViewEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewEditActionPerformed
        // View | Edit button - view and modify Sale Order's information
        
        try {
        
            int selectedRow = tb2ndSaleOrdersTable.getSelectedRow();
            if (selectedRow != -1) {
                // Get the selected Sale Order No.
                String selectedSaleOrderNo = tb2ndSaleOrdersTable.getValueAt(selectedRow, 0).toString();
                
                // Navigate to the ManageSaleOrderPage
                ManageSaleOrderPage manageSaleOrder = new ManageSaleOrderPage();
                
                try {
                    manageSaleOrder.loadOldSaleOrderData(selectedSaleOrderNo);
                } catch (ParseException e) {
                    System.out.println("ParseException occured during view / edit: " + e.getMessage());
                }
                manageSaleOrder.setVisible(true);
            } else {
                // Display an error message indicating that no row is selected
                JOptionPane.showMessageDialog(rootPane, "Please select a row to view / edit.");
            }
            // Dispose of SaleOrdersListPage
            this.dispose();
        } catch (IndexOutOfBoundsException e) {
            System.out.println("IndexOutOfBoundsException occured during view / edit: " + e.getMessage());
        }
                                               
    }//GEN-LAST:event_btnViewEditActionPerformed

    private void btnGenerateWorkDoneReportPageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerateWorkDoneReportPageActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnGenerateWorkDoneReportPageActionPerformed

    
    public void load2ndSaleOrdersTableData() {
        // Load 2ndSaleOrdersTable.txt
        DefaultTableModel model = (DefaultTableModel) tb2ndSaleOrdersTable.getModel();
        model.setRowCount(0);  // Clear existing data in the table
        
        try (BufferedReader br = new BufferedReader(new FileReader("2ndSaleOrdersTable.txt"))) {
            String line;
            boolean firstLine = true;  // Flag to skip first line 
            
            while ((line = br.readLine()) != null) {
                if (firstLine) {
                    firstLine = false;
                    continue; 
                }
                String[] col = line.split(";");
                if (col.length >= 12) {
                    String saleOrderNo = col[0].trim();
                    String purchaseOrderNo = col[1].trim();
                    String purchaseOrderDate = col[2].trim();
                    String userID = col[3].trim();
                    String customerName = col[4].trim();
                    String customerPhoneNo = col[5].trim();
                    String totalAmount = col[6].trim();
                    
                    String productStatus = col[7].trim();
                    String deliveryStatus = col[10].trim();
                    String orderStatus = col[11].trim();
                    
                    Object[] row2ndData = {saleOrderNo,purchaseOrderNo,purchaseOrderDate,userID,customerName,
                        customerPhoneNo,totalAmount,productStatus,deliveryStatus,orderStatus};
                    
                    model.addRow(row2ndData);
                } else {
                    System.out.println("Invalid line: " + line);
                }
            }
            
            // Initialization code or data loading 
            originalSorter = new TableRowSorter<>(model);
            tb2ndSaleOrdersTable.setRowSorter(originalSorter);
            
        } catch (IOException e) {
            System.out.println("IOException occured during loading sale orders data: " + e.getMessage());
        }
    }
    
    
    private void filterPurchaseOrderDateRange(Date poDateStart, Date poDateEnd) throws ParseException {
    
        if (poDateStart == null || poDateEnd == null) {
            JOptionPane.showMessageDialog(this, "Please select both 'Start' and 'End' dates.");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) tb2ndSaleOrdersTable.getModel();
        model.setRowCount(0); // Clear the table before populating with new data
        SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy");
        
        // Load sale orders data from 2ndSaleOrdersTable.txt file
        try (BufferedReader br = new BufferedReader(new FileReader("2ndSaleOrdersTable.txt"))) {
            String line;
            boolean firstLine = true;
            
            while ((line = br.readLine()) != null) {
                if (firstLine) {
                    firstLine = false;
                    continue;
                }
                
                String[] col = line.split(";");
                if (col.length >= 12) {
                    String purchaseOrderDateString = col[2].trim();
                    Date poDate = dateFormat.parse(purchaseOrderDateString);
                    
                    // Check if the purchaseOrderDate is within the selected range
                    if ((poDate.compareTo(poDateStart) == 0 || poDate.compareTo(poDateStart) >= 0)
                            && ((poDate.compareTo(poDateEnd) <= 0) || poDate.compareTo(poDateEnd) == 0)) {
                        
                    String saleOrderNo = col[0].trim();
                    String purchaseOrderNo = col[1].trim();
                    
                    String userID = col[3].trim();
                    String customerName = col[4].trim();
                    String customerPhoneNo = col[5].trim();
                    String totalAmount = col[6].trim();
                    String productStatus = col[7].trim();
                    String deliveryStatus = col[10].trim();
                    String orderStatus = col[11].trim();
                    
                    Object[] rowData = {saleOrderNo,purchaseOrderNo,purchaseOrderDateString,userID,customerName,
                        customerPhoneNo,totalAmount,productStatus,deliveryStatus,orderStatus};
                    model.addRow(rowData);
                    }
                } else {
                    System.out.println("Invalid line: " + line);
                }
                
            }   
        } catch (IOException e) {
            System.out.println("IOException occured during checking Purchase Order Date range: " + e.getMessage());
        } catch (ParseException e) {
            System.out.println("Error parsing Purchase Order date: " + e.getMessage());
        } catch (NullPointerException e) {
            System.out.println("NullPointerException occured during check Purchase Order Date range: " + e.getMessage());
        }    
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SaleOrdersListPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SaleOrdersListPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SaleOrdersListPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SaleOrdersListPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SaleOrdersListPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGenerateApprovedReportPage;
    private javax.swing.JButton btnGenerateClosedReportPage;
    private javax.swing.JButton btnGenerateWorkDoneReportPage;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnSearchDateRange;
    private javax.swing.JButton btnViewEdit;
    private com.toedter.calendar.JDateChooser dcEndPoDate;
    private com.toedter.calendar.JDateChooser dcStartPoDate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tb2ndSaleOrdersTable;
    private javax.swing.JTextField tfSearchAny;
    private javax.swing.JTextField tfUsername;
    // End of variables declaration//GEN-END:variables
}
